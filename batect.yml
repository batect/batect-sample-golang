containers:
  app:
    build_directory: .batect/app

tasks:
  setup:
    description: Download all dependencies used by the application.
    group: Setup tasks
    run:
      container: golang-build-env
      command: sh -c 'go mod download && go install github.com/onsi/ginkgo/v2/ginkgo'

  build:
    description: Build the application.
    group: Build tasks
    run:
      container: golang-build-env
      command: go build -o .batect/app/batect-sample-golang .
      environment:
        CGO_ENABLED: 0
        GOOS: linux

  unitTest:
    description: Run the unit tests.
    group: Test tasks
    run:
      container: golang-build-env
      command: sh -c "mkdir -p test-results/unitTests && ginkgo --skip-file='_journey_test.go$' --junit-report test-results/unitTests/report.xml"

  continuousUnitTest:
    description: Run the unit tests, and re-run them when any code changes are detected.
    group: Test tasks
    run:
      container: golang-build-env
      command: sh -c "mkdir -p test-results/unitTests && ginkgo watch --skip-file='_journey_test.go$' --junit-report test-results/unitTests/report.xml"

  journeyTest:
    description: Run the journey tests.
    group: Test tasks
    prerequisites:
      - build
    dependencies:
      - app
    run:
      container: golang-build-env
      command: sh -c "mkdir -p test-results/journeyTests && ginkgo --focus-file='_journey_test.go$' --junit-report test-results/journeyTests/report.xml"

  shell:
    description: Start a shell in the development environment.
    group: Utility tasks
    run:
      container: golang-build-env
      command: bash

  run:
    description: Run the application.
    group: Test tasks
    prerequisites:
      - build
    run:
      container: app
      ports:
        - local: 8080
          container: 8080

  checkFormatting:
    description: Check all files are formatted according to the Golang standard.
    group: Linting tasks
    run:
      container: golang-build-env
      command: ./util/checkFormatting.sh

  vet:
    description: Check for errors reported by 'go vet'.
    group: Linting tasks
    run:
      container: golang-build-env
      command: go vet .

  update:
    description: Update to latest minor or patch update of all dependencies.
    group: Dependency management tasks
    run:
      container: golang-build-env
      command: sh -c 'go get -u && go mod tidy'

include:
  - type: git
    repo: https://github.com/batect/golang-bundle.git
    ref: 0.29.0
